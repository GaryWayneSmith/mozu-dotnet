
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Resources.Content.Documentlists
{
	/// <summary>
	/// 
	/// </summary>
	public partial class ViewResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		private readonly DataViewMode _dataViewMode;
		
		public ViewResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
			_dataViewMode = DataViewMode.Live;
		}

		public ViewResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new ViewResource(_apiContext.CloneWith(contextModification));
		}

		public ViewResource(IApiContext apiContext, DataViewMode dataViewMode) 
		{
			_apiContext = apiContext;
			_dataViewMode = dataViewMode;
		}
				
		/// <summary>
		/// 
		/// </summary>
		/// <param name="documentListName"></param>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="responseFields"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <param name="viewName"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var view = new View();
		///   var documentCollection = view.GetViewDocuments( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.DocumentCollection GetViewDocuments(string documentListName, string viewName, string filter =  null, string sortBy =  null, int? pageSize =  null, int? startIndex =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentCollection> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.GetViewDocumentsClient( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.Content.DocumentCollection> GetViewDocumentsAsync(string documentListName, string viewName, string filter =  null, string sortBy =  null, int? pageSize =  null, int? startIndex =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentCollection> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.GetViewDocumentsClient( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="documentListName"></param>
		/// <param name="responseFields"></param>
		/// <param name="viewName"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.View"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var view = new View();
		///   var view = view.GetDocumentListView(_dataViewMode,  documentListName,  viewName,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.View GetDocumentListView(string documentListName, string viewName, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.View> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.GetDocumentListViewClient(_dataViewMode,  documentListName,  viewName,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.Content.View> GetDocumentListViewAsync(string documentListName, string viewName, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.View> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.GetDocumentListViewClient(_dataViewMode,  documentListName,  viewName,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="documentListName"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.ViewCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var view = new View();
		///   var viewCollection = view.GetDocumentListViews(_dataViewMode,  documentListName,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.ViewCollection GetDocumentListViews(string documentListName, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.ViewCollection> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.GetDocumentListViewsClient(_dataViewMode,  documentListName,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.Content.ViewCollection> GetDocumentListViewsAsync(string documentListName, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.ViewCollection> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.GetDocumentListViewsClient(_dataViewMode,  documentListName,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="documentListName"></param>
		/// <param name="responseFields"></param>
		/// <param name="viewName"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.View"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var view = new View();
		///   var view = view.UpdateDocumentListView( documentListName,  viewName,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.View UpdateDocumentListView(string documentListName, string viewName, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.View> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.UpdateDocumentListViewClient( documentListName,  viewName,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.Content.View> UpdateDocumentListViewAsync(string documentListName, string viewName, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.View> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.UpdateDocumentListViewClient( documentListName,  viewName,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="documentListName"></param>
		/// <param name="viewName"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.View"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var view = new View();
		///   var view = view.DeleteDocumentListView( documentListName,  viewName);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.View DeleteDocumentListView(string documentListName, string viewName)
		{
			MozuClient<Mozu.Api.Contracts.Content.View> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.DeleteDocumentListViewClient( documentListName,  viewName);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.Content.View> DeleteDocumentListViewAsync(string documentListName, string viewName)
		{
			MozuClient<Mozu.Api.Contracts.Content.View> response;
			var client = Mozu.Api.Clients.Content.Documentlists.ViewClient.DeleteDocumentListViewClient( documentListName,  viewName);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}


	}

}


