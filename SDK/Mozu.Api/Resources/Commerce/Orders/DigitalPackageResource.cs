
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Resources.Commerce.Orders
{
	/// <summary>
	/// 
	/// </summary>
	public partial class DigitalPackageResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public DigitalPackageResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}
				
		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId"></param>
		/// <param name="orderId"></param>
		/// <returns>
		/// List{string}
		/// </returns>
		/// <example>
		/// <code>
		///   var digitalpackage = new DigitalPackage();
		///   var string = digitalpackage.GetAvailableDigitalPackageFulfillmentActions( orderId,  digitalPackageId);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual List<string> GetAvailableDigitalPackageFulfillmentActions(string orderId, string digitalPackageId)
		{
			MozuClient<List<string>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetAvailableDigitalPackageFulfillmentActionsClient( orderId,  digitalPackageId);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<List<string>> GetAvailableDigitalPackageFulfillmentActionsAsync(string orderId, string digitalPackageId)
		{
			MozuClient<List<string>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetAvailableDigitalPackageFulfillmentActionsClient( orderId,  digitalPackageId);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId"></param>
		/// <param name="orderId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var digitalpackage = new DigitalPackage();
		///   var digitalPackage = digitalpackage.GetDigitalPackage( orderId,  digitalPackageId,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage GetDigitalPackage(string orderId, string digitalPackageId, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetDigitalPackageClient( orderId,  digitalPackageId,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> GetDigitalPackageAsync(string orderId, string digitalPackageId, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetDigitalPackageClient( orderId,  digitalPackageId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="orderId"></param>
		/// <param name="responseFields"></param>
		/// <param name="digitalPackage"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var digitalpackage = new DigitalPackage();
		///   var digitalPackage = digitalpackage.CreateDigitalPackage( digitalPackage,  orderId,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage CreateDigitalPackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage digitalPackage, string orderId, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.CreateDigitalPackageClient( digitalPackage,  orderId,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> CreateDigitalPackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage digitalPackage, string orderId, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.CreateDigitalPackageClient( digitalPackage,  orderId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId"></param>
		/// <param name="orderId"></param>
		/// <param name="responseFields"></param>
		/// <param name="digitalPackage"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var digitalpackage = new DigitalPackage();
		///   var digitalPackage = digitalpackage.UpdateDigitalPackage( digitalPackage,  orderId,  digitalPackageId,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage UpdateDigitalPackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage digitalPackage, string orderId, string digitalPackageId, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.UpdateDigitalPackageClient( digitalPackage,  orderId,  digitalPackageId,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> UpdateDigitalPackageAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage digitalPackage, string orderId, string digitalPackageId, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.UpdateDigitalPackageClient( digitalPackage,  orderId,  digitalPackageId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId"></param>
		/// <param name="orderId"></param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var digitalpackage = new DigitalPackage();
		///   digitalpackage.DeleteDigitalPackage( orderId,  digitalPackageId);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual void DeleteDigitalPackage(string orderId, string digitalPackageId)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.DeleteDigitalPackageClient( orderId,  digitalPackageId);
			client.WithContext(_apiContext);
			response = client.Execute();

		}

		public virtual async Task DeleteDigitalPackageAsync(string orderId, string digitalPackageId)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.DeleteDigitalPackageClient( orderId,  digitalPackageId);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();

		}


	}

}


