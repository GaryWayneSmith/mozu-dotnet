
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;
using Mozu.Api.Contracts.Fulfillment;

namespace Mozu.Api.Resources.Commerce.Fulfillment
{
	/// <summary>
	/// Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
	/// </summary>
	public partial class ShipmentResource
	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;


		public ShipmentResource(IApiContext apiContext)
		{
			_apiContext = apiContext;
		}

		public ShipmentResource CloneWithApiContext(Action<IApiContext> contextModification)
		{
			return new ShipmentResource(_apiContext.CloneWith(contextModification));
		}



		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter">A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.</param>
		/// <param name="isLate"></param>
		/// <param name="page"></param>
		/// <param name="pageSize">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.</param>
		/// <param name="quickSearch"></param>
		/// <param name="sort"></param>
		/// <param name="workflowTaskName"></param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="ct"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Fulfillment.PagedModelOfEntityModelOfShipment"/>
		/// </returns>		
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.PagedModelOfEntityModelOfShipment> GetShipmentsAsync(string filter = null, bool? isLate = null, int? page = null, int? pageSize = null, string quickSearch = null, string sort = null, string workflowTaskName = null, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.PagedModelOfEntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.GetShipmentsClient(filter, isLate, page, pageSize, quickSearch, sort, workflowTaskName, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipmentNumber"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> GetShipmentAsync(int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.GetShipmentClient(shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}
		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipmentNumber"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> FulfillShipmentAsync(int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.FulfillShipmentClient(shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipment"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> NewShipmentAsync(Shipment shipment, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.NewShipmentClient(shipment, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cancelItemsRequest"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> CancelItemsAsync(CancelItemsRequest cancelItemsRequest, int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.CancelItemsClient(cancelItemsRequest,shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cancelShipment"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> CancelShipmentAsync(CancelShipment cancelShipment, int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.CancelShipmentClient(cancelShipment, shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipmentNumber"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<System.IO.Stream> DeleteShipmentAsync(int shipmentNumber, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<System.IO.Stream> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.DeleteShipmentClient(shipmentNumber);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="destination"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> DestinationUpdateAsync(Destination destination, int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.DestinationUpdateClient(destination, shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipment"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="updateFields"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> ReplaceShipmentAsync(Shipment shipment, int shipmentNumber, List<string> updateFields, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.ReplaceShipmentClient(shipment, shipmentNumber,updateFields, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipmentNumber"></param>
		/// <param name="reassignItemsRequest"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> ReassignItems(ReassignItemsRequest reassignItemsRequest, int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.ReassignItemsClient(reassignItemsRequest, shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="shipmentNumber"></param>
		/// <param name="reassignShipmentRequest"></param>
		/// <param name="responseFields"></param>
		/// <param name="ct"></param>
		/// <returns></returns>
		public virtual async Task<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> ReassignShipment(ReassignShipment reassignShipmentRequest, int shipmentNumber, string responseFields = null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Fulfillment.EntityModelOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.Fulfillment.ShipmentClient.ReassignShipment(reassignShipmentRequest, shipmentNumber, responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();
		}
	}

}


