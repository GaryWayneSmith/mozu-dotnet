
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce
{
	/// <summary>
	/// 
	/// </summary>
	public partial class FulfillmentProxyResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public FulfillmentProxyResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public FulfillmentProxyResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new FulfillmentProxyResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="pickWaveNumber"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfPickWave = await fulfillmentproxy.GetShipmentsInPickWaveAsync( pickWaveNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> GetShipmentsInPickWaveAsync(int? pickWaveNumber =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.GetShipmentsInPickWaveClient( pickWaveNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="pickWaveNumber"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfPickWave = await fulfillmentproxy.GetPickWaveAsync( pickWaveNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> GetPickWaveAsync(int? pickWaveNumber =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.GetPickWaveClient( pickWaveNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="fulfillmentLocationCode"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfPickWave = await fulfillmentproxy.GetOpenPickWavesAsync( fulfillmentLocationCode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> GetOpenPickWavesAsync(string fulfillmentLocationCode, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.GetOpenPickWavesClient( fulfillmentLocationCode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.GetShipmentAsync( shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> GetShipmentAsync(int? shipmentNumber =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.GetShipmentClient( shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.PagedResourcesOfResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var pagedResourcesOfResourceOfShipment = await fulfillmentproxy.GetShipmentsAsync( filter,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.PagedResourcesOfResourceOfShipment> GetShipmentsAsync(string filter, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.PagedResourcesOfResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.GetShipmentsClient( filter,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="backorderShipmentBody"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.BackorderShipmentAsync( backorderShipmentBody,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> BackorderShipmentAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.BackorderShipmentRequest backorderShipmentBody, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.BackorderShipmentClient( backorderShipmentBody,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="pickWaveNumber"></param>
		/// <param name="responseFields"></param>
		/// <param name="pickwave"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfPickWave = await fulfillmentproxy.ClosePickWaveAsync( pickwave,  pickWaveNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> ClosePickWaveAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.ClosePickWave pickwave, int? pickWaveNumber =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfPickWave> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.ClosePickWaveClient( pickwave,  pickWaveNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="backorderItemsUpdateRequest"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.BackorderItemsUpdateAsync( backorderItemsUpdateRequest,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> BackorderItemsUpdateAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.BackorderItemsUpdateRequest backorderItemsUpdateRequest, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.BackorderItemsUpdateClient( backorderItemsUpdateRequest,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="cancelShipment"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.CancelShipmentAsync( cancelShipment,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> CancelShipmentAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.CancelShipment cancelShipment, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.CancelShipmentClient( cancelShipment,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="cancelItemsRequest"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.CancelItemsAsync( cancelItemsRequest,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> CancelItemsAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.CancelItemsRequest cancelItemsRequest, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.CancelItemsClient( cancelItemsRequest,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.FulfillShipmentAsync( shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> FulfillShipmentAsync(int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.FulfillShipmentClient( shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="reassignShipment"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.ReassignShipmentAsync( reassignShipment,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> ReassignShipmentAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.ReassignShipment reassignShipment, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.ReassignShipmentClient( reassignShipment,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="reassignItemsRequest"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.ReassignShipmentItemsAsync( reassignItemsRequest,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> ReassignShipmentItemsAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.ReassignItemsRequest reassignItemsRequest, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.ReassignShipmentItemsClient( reassignItemsRequest,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="shipmentNumber"></param>
		/// <param name="rejectShipment"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var fulfillmentproxy = new FulfillmentProxy();
		///   var resourceOfShipment = await fulfillmentproxy.RejectShipmentAsync( rejectShipment,  shipmentNumber,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> RejectShipmentAsync(Mozu.Api.Contracts.Kibo.Fulfillment.Model.RejectShipment rejectShipment, int shipmentNumber, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Kibo.Fulfillment.Model.ResourceOfShipment> response;
			var client = Mozu.Api.Clients.Commerce.FulfillmentProxyClient.RejectShipmentClient( rejectShipment,  shipmentNumber,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


	}

}


