
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;


namespace Mozu.Api.Contracts.PricingRuntime
{
		///
		///	Properties of the conditions that must be met for a discount to apply to an order.
		///
		public class DiscountCondition
		{
			///
			///The coupon code that a shopper uses to redeem an associated discount  on a purchase. This is also the unique identifier of the coupon itself.
			///
			public string CouponCode { get; set; }

			public List<int> CustomerSegmentIds { get; set; }

			public List<int> ExcludedCategoryIds { get; set; }

			public List<string> ExcludedProductCodes { get; set; }

			///
			///Date and time in UTC format when a discount, credit, wish list, or cart expires. An expired discount no longer can be redeemed. An expired wish list is no longer available. An expired credit can no longer be redeemed for a purchase. Acart becomes inactive and expired based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
			///
			public DateTime? ExpirationDate { get; set; }

			public List<int> IncludedCategoryIds { get; set; }

			public List<string> IncludedProductCodes { get; set; }

			public decimal? MinimumCategorySubtotalBeforeDiscounts { get; set; }

			public decimal? MinimumLifetimeValueAmount { get; set; }

			public decimal? MinimumOrderAmount { get; set; }

			public int? MinimumQuantityProductsRequiredInCategories { get; set; }

			public int? MinimumQuantityRequiredProducts { get; set; }

			public List<string> PaymentWorkflows { get; set; }

			public bool RequiresCoupon { get; set; }

			public DateTime? StartDate { get; set; }

		}

}